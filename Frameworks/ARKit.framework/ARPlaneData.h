/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ARKit.framework/ARKit
 */

@interface ARPlaneData : NSObject <ARResultData> {
    NSArray * _anchorIdentifierMap;
    unsigned long long  _detectionTypeMask;
    int  _surfaceCount;
    struct SurfaceDetectionPlane {} ** _surfaces;
    long long  _techniqueID;
}

@property (nonatomic, retain) NSArray *anchorIdentifierMap;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned long long detectionTypeMask;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long maxPlaneID;
@property (readonly) Class superclass;
@property (nonatomic, readonly) int surfaceCount;
@property (nonatomic, readonly) struct SurfaceDetectionPlane {}**surfaces;
@property (nonatomic, readonly) long long techniqueID;

- (void).cxx_destruct;
- (id)_anchorForSurface:(struct SurfaceDetectionPlane { int x1; struct SurfaceExtent { float x_2_1_1[16]; float x_2_1_2[9]; struct SurfaceDetectionBoundingBox {} *x_2_1_3; unsigned long long x_2_1_4; struct SurfacePoint2d {} *x_2_1_5; unsigned long long x_2_1_6; float x_2_1_7; } x2[3]; unsigned long long x3; float x4[3]; float x5[3]; int x6; unsigned long long x7; unsigned long long x8; unsigned long long *x9; }*)arg1 referenceOriginTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg2;
- (struct { })_boundsForSurface:(struct SurfaceDetectionPlane { int x1; struct SurfaceExtent { float x_2_1_1[16]; float x_2_1_2[9]; struct SurfaceDetectionBoundingBox {} *x_2_1_3; unsigned long long x_2_1_4; struct SurfacePoint2d {} *x_2_1_5; unsigned long long x_2_1_6; float x_2_1_7; } x2[3]; unsigned long long x3; float x4[3]; float x5[3]; int x6; unsigned long long x7; unsigned long long x8; unsigned long long *x9; }*)arg1 planeToAnchorTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg2 alignmentRotation:(long long)arg3;
- (id)_geometryForSurface:(struct SurfaceDetectionPlane { int x1; struct SurfaceExtent { float x_2_1_1[16]; float x_2_1_2[9]; struct SurfaceDetectionBoundingBox {} *x_2_1_3; unsigned long long x_2_1_4; struct SurfacePoint2d {} *x_2_1_5; unsigned long long x_2_1_6; float x_2_1_7; } x2[3]; unsigned long long x3; float x4[3]; float x5[3]; int x6; unsigned long long x7; unsigned long long x8; unsigned long long *x9; }*)arg1 planeToAnchorTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg2 alignmentRotation:(long long)arg3 planeBounds:(struct { })arg4;
- (id)_gridExtentForSurface:(struct SurfaceDetectionPlane { int x1; struct SurfaceExtent { float x_2_1_1[16]; float x_2_1_2[9]; struct SurfaceDetectionBoundingBox {} *x_2_1_3; unsigned long long x_2_1_4; struct SurfacePoint2d {} *x_2_1_5; unsigned long long x_2_1_6; float x_2_1_7; } x2[3]; unsigned long long x3; float x4[3]; float x5[3]; int x6; unsigned long long x7; unsigned long long x8; unsigned long long *x9; }*)arg1 planeToAnchorTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg2 alignmentRotation:(long long)arg3;
- (long long)_identifierForSurfaceID:(long long)arg1;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })_planeToWorldTransformForSurface:(struct SurfaceDetectionPlane { int x1; struct SurfaceExtent { float x_2_1_1[16]; float x_2_1_2[9]; struct SurfaceDetectionBoundingBox {} *x_2_1_3; unsigned long long x_2_1_4; struct SurfacePoint2d {} *x_2_1_5; unsigned long long x_2_1_6; float x_2_1_7; } x2[3]; unsigned long long x3; float x4[3]; float x5[3]; int x6; unsigned long long x7; unsigned long long x8; unsigned long long *x9; }*)arg1;
- (id)_updatedAnchor:(id)arg1 forSurface:(struct SurfaceDetectionPlane { int x1; struct SurfaceExtent { float x_2_1_1[16]; float x_2_1_2[9]; struct SurfaceDetectionBoundingBox {} *x_2_1_3; unsigned long long x_2_1_4; struct SurfacePoint2d {} *x_2_1_5; unsigned long long x_2_1_6; float x_2_1_7; } x2[3]; unsigned long long x3; float x4[3]; float x5[3]; int x6; unsigned long long x7; unsigned long long x8; unsigned long long *x9; }*)arg2 referenceOriginTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg3;
- (long long)_worldAlignmentRotationForReferenceTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1 planeAlignment:(long long)arg2;
- (id)anchorIdentifierMap;
- (id)anchorsForCameraWithTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1 referenceOriginTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg2 existingAnchors:(id)arg3 anchorsToRemove:(id)arg4;
- (void)dealloc;
- (unsigned long long)detectionTypeMask;
- (id)hitTestFromOrigin:(void *)arg1 withDirection:(void *)arg2 planeAlignment:(void *)arg3; // needs 3 arg types, found 1: long long
- (id)initWithSurfaces:(struct SurfaceDetectionPlane {}**)arg1 surfaceCount:(int)arg2 detectionTypeMask:(unsigned long long)arg3 techniqueIdentifier:(long long)arg4;
- (long long)maxPlaneID;
- (void)setAnchorIdentifierMap:(id)arg1;
- (int)surfaceCount;
- (struct SurfaceDetectionPlane {}**)surfaces;
- (long long)techniqueID;

@end
