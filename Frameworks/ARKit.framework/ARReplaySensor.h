/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ARKit.framework/ARKit
 */

@interface ARReplaySensor : NSObject <ARSensor> {
    int  _accelDataIndex;
    AVAssetReaderOutputMetadataAdaptor * _accelOutputMetadataAdaptor;
    float  _advanceFramesPerSecondMultiplier;
    NSMutableArray * _arAccelerometerData;
    NSMutableArray * _arDeviceOrientationData;
    NSMutableArray * _arGyroData;
    NSMutableArray * _arImageData;
    AVAsset * _asset;
    AVAssetReader * _assetReader;
    <ARSensorDelegate> * _delegate;
    AVAssetReaderTrackOutput * _depthOutput;
    NSString * _deviceModel;
    int  _deviceOrientationDataIndex;
    AVAssetReaderOutputMetadataAdaptor * _deviceOrientationOutputMetadataAdaptor;
    unsigned long long  _forcePlaybackFramesPerSecond;
    double  _frameRateScale;
    int  _gyroDataIndex;
    AVAssetReaderOutputMetadataAdaptor * _gyroOutputMetadataAdaptor;
    int  _imageIndex;
    int  _imageIndexForPreloading;
    AVAssetReaderTrackOutput * _imageOutput;
    AVAssetReaderOutputMetadataAdaptor * _imageOutputMetadataAdaptor;
    struct CGSize { 
        double width; 
        double height; 
    }  _imageResolution;
    double  _imageTimestampWhenFramerateChanged;
    bool  _interrupted;
    bool  _isReplayingManually;
    bool  _manualCommandLineMode;
    bool  _metadataLoadedFromAsset;
    struct opaqueCMSampleBuffer { } * _nextDepthSampleBuffer;
    long long  _nextFrameIndex;
    struct opaqueCMSampleBuffer { } * _nextSampleBuffer;
    AVAssetReaderOutputMetadataAdaptor * _oldMotionOutputMetadataAdaptor;
    NSDictionary * _recordedResultAdaptors;
    NSSet * _recordedResultClasses;
    NSDictionary * _recordedResultGetters;
    unsigned long long  _recordedSensorTypes;
    NSObject<OS_dispatch_queue> * _replayQueue;
    <ARReplaySensorDelegate> * _replaySensorDelegate;
    bool  _replayStarted;
    bool  _running;
    unsigned long long  _sensorDataTypes;
    double  _startTime;
    long long  _targetFrameIndex;
    long long  _tick;
    NSObject<OS_dispatch_source> * _timer;
    double  _timestampWhenFramerateChanged;
}

@property float advanceFramesPerSecondMultiplier;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ARSensorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *deviceModel;
@property (nonatomic) unsigned long long forcePlaybackFramesPerSecond;
@property (readonly) unsigned long long hash;
@property (nonatomic) int imageIndex;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } imageResolution;
@property (nonatomic, readonly) bool interrupted;
@property (nonatomic, readonly) bool isReplayingManually;
@property long long nextFrameIndex;
@property (nonatomic) unsigned long long powerUsage;
@property (nonatomic, readonly) NSSet *recordedResultClasses;
@property (nonatomic, readonly) unsigned long long recordedSensorTypes;
@property (nonatomic) <ARReplaySensorDelegate> *replaySensorDelegate;
@property (readonly) Class superclass;
@property long long targetFrameIndex;

- (void).cxx_destruct;
- (void)_didOutputSensorData:(id)arg1;
- (void)advance;
- (void)advanceFrame;
- (float)advanceFramesPerSecondMultiplier;
- (void)advanceToFrameIndex:(long long)arg1;
- (id)createAndAddMetadataAdaptorForTrack:(id)arg1;
- (double)currentTime;
- (void)dealloc;
- (id)delegate;
- (id)deviceModel;
- (void)endInterruption;
- (void)endReplay;
- (void)enumerateDataWithIdentifier:(id)arg1 inOutputAdaptor:(id)arg2 usingBlock:(id /* block */)arg3;
- (void)failWithError:(id)arg1;
- (void)fastForwardIndexesToTime:(double)arg1;
- (unsigned long long)forcePlaybackFramesPerSecond;
- (id)getNextAccelerometerData;
- (id)getNextDeviceOrientationData;
- (id)getNextGyroData;
- (id)getNextImageData;
- (id)getResultDataForClasses:(id)arg1 atTimestamp:(double)arg2;
- (bool)hasAccelerometerDataForTime:(double)arg1;
- (bool)hasDeviceOrientationDataForTime:(double)arg1;
- (bool)hasGyroDataForTime:(double)arg1;
- (bool)hasImageDataForTimestamp:(double)arg1;
- (bool)hasMoreData;
- (int)imageIndex;
- (struct CGSize { double x1; double x2; })imageResolution;
- (id)initWithDataFromFile:(id)arg1;
- (id)initWithSequenceURL:(id)arg1 manualReplay:(bool)arg2;
- (void)initializeAssetReaderWithAsset:(id)arg1 buffersOnly:(bool)arg2;
- (void)interrupt;
- (bool)interrupted;
- (bool)isReplayingManually;
- (void)loadAllMetadata;
- (long long)nextFrameIndex;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)preloadNextPixelBuffers:(int)arg1;
- (void)prepareForReplay;
- (unsigned long long)providedDataTypes;
- (void)readFileMetadataFromAsset:(id)arg1;
- (id)recordedResultClasses;
- (unsigned long long)recordedSensorTypes;
- (id)replaySensorDelegate;
- (id)replayTechniqueForResultDataClasses:(id)arg1;
- (struct __CVBuffer { }*)requestNextDepthPixelBufferForTimestamp:(double)arg1;
- (struct __CVBuffer { }*)requestNextPixelBufferForTimestamp:(double)arg1;
- (void)setAdvanceFramesPerSecondMultiplier:(float)arg1;
- (void)setDelegate:(id)arg1;
- (void)setForcePlaybackFramesPerSecond:(unsigned long long)arg1;
- (void)setImageIndex:(int)arg1;
- (void)setNextFrameIndex:(long long)arg1;
- (void)setReplaySensorDelegate:(id)arg1;
- (void)setTargetFrameIndex:(long long)arg1;
- (void)start;
- (void)startReplayIfNeeded;
- (void)stop;
- (long long)targetFrameIndex;
- (void)tick;
- (bool)track:(id)arg1 hasMetadataIdentifier:(id)arg2;
- (id)unpackItemsOfClass:(Class)arg1 withIdentifier:(id)arg2 inOutputAdaptor:(id)arg3;
- (id)unpackTimestampedItemsOfClass:(Class)arg1 withIdentifier:(id)arg2 inOutputAdaptor:(id)arg3;

@end
