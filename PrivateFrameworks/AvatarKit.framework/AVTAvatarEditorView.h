/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit
 */

@interface AVTAvatarEditorView : SCNView {
    bool  _autoHidePending;
    bool  _autofocusSelectedFacialAttribute;
    AVTAvatar * _avatar;
    AVTAvatarInstance * _avatarInstance;
    SCNNode * _avatarNode;
    <AVTAvatarEditorViewDelegate> * _avatarViewDelegate;
    unsigned long long  _currentExpressionIndex;
    bool  _editable;
    NSMutableArray * _handleInitialOffsets;
    double  _handleProjectedZ;
    bool  _isEditing;
    bool  _isMaster;
    double  _lastInteractionTime;
    bool  _lockLookAt;
    bool  _mouseInside;
    UIGestureRecognizer * _pinchGesture;
    SCNMaterial * _rigMaterial;
    NSMutableArray * _rigs;
    UIGestureRecognizer * _rotateGesture;
    double  _scale0;
    long long  _selectedCategory;
    NSArray * _selectedHandles;
    unsigned int  _visibleRigMask;
    SCNNode * cameraNode;
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    }  eyeLeftPos;
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    }  eyeRightPos;
    UIImage * image;
}

@property (nonatomic) bool autofocusSelectedFacialAttribute;
@property (nonatomic, retain) AVTAvatar *avatar;
@property (nonatomic, readonly) AVTAvatarInstance *avatarInstance;
@property (nonatomic) <AVTAvatarEditorViewDelegate> *avatarViewDelegate;
@property (getter=isEditable, nonatomic) bool editable;
@property (nonatomic) long long framingMode;
@property (nonatomic) long long selectedCategory;

+ (id)defaultEnvironment;

- (void).cxx_destruct;
- (void)_autoHideOverlays;
- (void)_avtCommonInit;
- (void)_didInteract;
- (void)_handlePinch:(id)arg1;
- (void)_handleRotation:(id)arg1;
- (void)_hideOverlays;
- (void)_moveHandle:(id)arg1 to:(struct CGPoint { double x1; double x2; })arg2 initialOffset:(struct SCNVector3 { float x1; float x2; float x3; })arg3;
- (void)_moveSelectedHandlesTo:(struct CGPoint { double x1; double x2; })arg1;
- (id)_newRigNode:(double)arg1;
- (id)_rigMaterial;
- (void)_rotateRig:(id)arg1 by:(double)arg2;
- (void)_scaleRig:(id)arg1 by:(double)arg2;
- (void)_scaleRig:(id)arg1 to:(double)arg2;
- (bool)_selectHandleAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned int)_selectionToVisibleRigs;
- (void)_showOverlays;
- (void)_unselectHandles;
- (void)_updateVisibleRigs;
- (void)_updateVisibleRigsFromBones;
- (bool)autofocusSelectedFacialAttribute;
- (id)avatar;
- (void)avatarBackgroundColorDidUpdate:(id)arg1;
- (void)avatarDidEdit:(id)arg1;
- (id)avatarInstance;
- (id)avatarViewDelegate;
- (void)didEdit;
- (long long)framingMode;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 options:(id)arg2;
- (bool)isEditable;
- (void)pinch:(float)arg1 ended:(bool)arg2;
- (void)prepareAvatarWithCompletionHandler:(id /* block */)arg1;
- (void)rotate:(double)arg1 ended:(bool)arg2;
- (long long)selectedCategory;
- (long long)selectedComponent;
- (long long)selectedFacialFeature;
- (void)setAutofocusSelectedFacialAttribute:(bool)arg1;
- (void)setAvatar:(id)arg1;
- (void)setAvatarViewDelegate:(id)arg1;
- (void)setEditable:(bool)arg1;
- (void)setFramingMode:(long long)arg1;
- (void)setSelectedCategory:(long long)arg1;
- (void)showAvatarFromAvatarView:(id)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)updatePointOfView;

@end
