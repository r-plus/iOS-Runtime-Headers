/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel
 */

@interface CEMNetworkVPNDeclaration : CEMConfigurationBase <CEMRegisteredTypeProtocol>

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSDictionary *payloadAlwaysOn;
@property (nonatomic, readonly) NSNumber *payloadDisconnectOnIdle;
@property (nonatomic, readonly) NSNumber *payloadDisconnectOnIdleTimer;
@property (nonatomic, readonly) NSDictionary *payloadEAP;
@property (nonatomic, readonly) NSDictionary *payloadIKEv2;
@property (nonatomic, readonly) NSDictionary *payloadIPSec;
@property (nonatomic, readonly) NSDictionary *payloadIPv4;
@property (nonatomic, readonly) NSDictionary *payloadPPP;
@property (nonatomic, readonly) NSDictionary *payloadProxies;
@property (nonatomic, readonly) NSString *payloadUserDefinedName;
@property (nonatomic, readonly) NSDictionary *payloadVPN;
@property (nonatomic, readonly) NSString *payloadVPNSubType;
@property (nonatomic, readonly) NSString *payloadVPNType;
@property (nonatomic, readonly) NSDictionary *payloadVendorConfig;
@property (readonly) Class superclass;

+ (id)AlwaysOn_TunnelConfiguration_allowedPayloadKeys;
+ (id)AlwaysOn_allowedPayloadKeys;
+ (id)IKEv2_allowedPayloadKeys;
+ (id)IPSec_allowedPayloadKeys;
+ (id)IPv4_allowedPayloadKeys;
+ (id)MatchDomainRules_allowedPayloadKeys;
+ (id)PPP_allowedPayloadKeys;
+ (id)Proxies_allowedPayloadKeys;
+ (id)SecurityAssociation_allowedPayloadKeys;
+ (id)VPN_allowedPayloadKeys;
+ (id)VendorConfig_allowedPayloadKeys;
+ (id)allowedPayloadKeys;
+ (id)allowedReasons;
+ (id)allowedStatusKeys;
+ (id)profileType;
+ (id)registeredClass;
+ (id)registeredType;
+ (id)restrictionPayloadKeys;

- (int)activationLevel;
- (id)assetReferences;
- (bool)multipleAllowed;
- (bool)mustBeSupervised;
- (id)payloadAlwaysOn;
- (id)payloadDisconnectOnIdle;
- (id)payloadDisconnectOnIdleTimer;
- (id)payloadEAP;
- (id)payloadIKEv2;
- (id)payloadIPSec;
- (id)payloadIPv4;
- (id)payloadPPP;
- (id)payloadProxies;
- (id)payloadUserDefinedName;
- (id)payloadVPN;
- (id)payloadVPNSubType;
- (id)payloadVPNType;
- (id)payloadVendorConfig;
- (id)serializePayload:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadAlwaysOn:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadAlwaysOn_TunnelConfiguration:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadIKEv2:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadIPSec:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadIPv4:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadMatchDomainRules:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadPPP:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadProxies:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadSecurityAssociation:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadVPN:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadVendorConfig:(id)arg1 withAssetProviders:(id)arg2;
- (bool)validPayloadAlwaysOn_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadAlwaysOn_TunnelConfiguration_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadDictionary:(id)arg1 error:(id*)arg2;
- (bool)validPayloadIKEv2_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadIPSec_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadIPv4_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadMatchDomainRules_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadPPP_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadProxies_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadSecurityAssociation_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadVPN_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validPayloadVendorConfig_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id*)arg3;
- (bool)validStatusDictionary:(id)arg1 error:(id*)arg2;

@end
